{"name": "test_invalid_addition", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TestScripts.MainPageScript.main_page_tests.LoginTests testMethod=test_invalid_addition>\n\n    @allure.testcase(\"Invalid Addition Test\")\n    def test_invalid_addition(self):\n        \"\"\"\n            This test is validating the unsuccessful addition. (negative scenario)\n            :return: return test status\n            \"\"\"\n    \n        with allure.step(\"Verify invalid addition functionality\"):\n            result = self.main_page.verify_addition_functionality(self.exc.get_data(\"test_invalid_addition\", \"Number_A\"),\n                                                          self.exc.get_data(\"test_invalid_addition\", \"Number_B\"),\n                                                                  self.exc.get_data(\"test_invalid_addition\", \"Expected\"))\n>           self.exe_status.mark_final(\"test_invalid_addition\", result)\n\nTestScripts\\MainPageScript\\main_page_tests.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <FrameworkUtilities.execution_status_utility.ExecutionStatus object at 0x05F8BC70>\ntest_name = 'test_invalid_addition', result = False\n\n    def mark_final(self, test_name, result):\n    \n        \"\"\"\n            This method handles final assertion and saves the result for final mark.\n            :param test_name: it takes the test case name value\n            :param result: this parameter takes the execution status value pass/fail.\n            :return: this method returns nothing.\n            \"\"\"\n    \n        self.set_result(result, test_name)\n    \n        if \"FAIL\" in self.result_list:\n            self.log.error(\"### \" + test_name + \" ### TEST FAILED\")\n            self.result_list.clear()\n>           assert True is False\nE           AssertionError\n\nFrameworkUtilities\\execution_status_utility.py:74: AssertionError"}, "description": "\n        This test is validating the unsuccessful addition. (negative scenario)\n        :return: return test status\n        ", "steps": [{"name": "Verify invalid addition functionality", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\abhilash.sharma\\Desktop\\Abhilash04_GitRepo\\FEAT\\TestScripts\\MainPageScript\\main_page_tests.py\", line 81, in test_invalid_addition\n    self.exe_status.mark_final(\"test_invalid_addition\", result)\n  File \"C:\\Users\\abhilash.sharma\\Desktop\\Abhilash04_GitRepo\\FEAT\\FrameworkUtilities\\execution_status_utility.py\", line 74, in mark_final\n    assert True is False\n"}, "attachments": [{"source": "f35021bf-1f9a-45ee-a9fc-2e87af01db44-attachment.png", "type": "image/png"}], "start": 1532780895182, "stop": 1532780895841}], "start": 1532780895182, "stop": 1532780895841, "uuid": "9c880f82-7ec4-466c-a8d0-771f8acfe30d", "historyId": "d754f42caf7e9227e49fd915a22b55eb", "fullName": "TestScripts.test_manager.LoginTests#test_invalid_addition", "labels": [{"name": "feature", "value": "Web App Input Tests"}, {"name": "story", "value": "[DEMO] - Automate  the  basic functionality"}, {"name": "tag", "value": "@pytest.mark.usefixtures('method_level_setup')"}, {"name": "host", "value": "SSLT0079"}, {"name": "thread", "value": "2520-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestScripts.test_manager"}], "links": [{"type": "test_case", "url": "Invalid Addition Test"}]}